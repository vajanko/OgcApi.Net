name: Publish nuget packages

on:
  release:
    types: [created]  

jobs:
  build:

    runs-on: ubuntu-latest
   
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
        source-url: https://api.nuget.org/v3/index.json 
      env:
        NUGET_AUTH_TOKEN: ${{secrets.NUGET_API_KEY}}        
    - name: Restore dependencies
      run: dotnet restore OgcApi.Net.sln    
    - name: Build
      run: dotnet build -c Release --no-restore OgcApi.Net.sln
    - name: Pack
      run: |
        mkdir artifacts 
        dotnet pack -c Release -o artifacts --no-restore OgcApi.Net/OgcApi.Net.csproj -p:PackageVersion=${{ github.event.release.tag_name }}
        dotnet pack -c Release -o artifacts --no-restore OgcApi.Net.SqlServer/OgcApi.Net.SqlServer.csproj -p:PackageVersion=${{ github.event.release.tag_name }}
        dotnet pack -c Release -o artifacts --no-restore OgcApi.Net.PostGis/OgcApi.Net.PostGis.csproj -p:PackageVersion=${{ github.event.release.tag_name }}
        dotnet pack -c Release -o artifacts --no-restore OgcApi.Net.SQLite/OgcApi.Net.SQLite.csproj -p:PackageVersion=${{ github.event.release.tag_name }}
        dotnet pack -c Release -o artifacts --no-restore OgcApi.Net.MbTiles/OgcApi.Net.MbTiles.csproj -p:PackageVersion=${{ github.event.release.tag_name }}
        dotnet pack -c Release -o artifacts --no-restore OgcApi.Net.Schemas/OgcApi.Net.Schemas.csproj -p:PackageVersion=${{ github.event.release.tag_name }}
    - name: Publish          
      run: |        
        dotnet nuget push "./artifacts/*.nupkg" --skip-duplicate --api-key ${{secrets.NUGET_API_KEY}}
        rm -rf artifacts
